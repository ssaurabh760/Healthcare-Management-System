/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JPanel.java to edit this template
 */
package UI.ReceptionistLogin;

import Hospital.Employee;
import Hospital.Hospital;
import Hospital.Patient;
import Hospital.PatientAppointment;
import static Hospital.Role.RoleType.Doctor;
import UI.DoctorLogin.DoctorLandingPage;
import UI.MainFrame;
import UI.Technician.Technician;
import java.util.ArrayList;
import java.util.List;
import java.util.Optional;
import java.util.Random;
import java.util.stream.Collectors;
import javax.swing.JOptionPane;

/**
 *
 * @author shrey
 */
public class AppointmentBookingDetails extends javax.swing.JPanel {

    /**
     * Creates new form AppointmentBookingDetails
     */
    Hospital hospital;
    Employee employee;
    public AppointmentBookingDetails(Hospital hospital, Employee employee) {
        initComponents();
        this.hospital = hospital;
        this.employee = employee;
        txtPrice1.setText("100");
        populateDoctorDropDown();
        populateTimeSlotDropDown();
    }
    
    public void populateDoctorDropDown() {
        
        jComboBox1.removeAllItems();
        for(Employee doctor : hospital.getEmployeeDirectory().getEmployeeList().stream().filter(r -> r.isDoctor()).collect(Collectors.toList())) {
            jComboBox1.addItem(doctor.toString());
           
        }
         jComboBox1.setSelectedIndex(0);
    }
    private static List<String> generateTimeSlots() {
        List<String> timeSlots = new ArrayList<>();

        int startHour = 9;
        int endHour = 18;

        for (int hour = startHour; hour <= endHour; hour++) {
            // Determine if it's AM or PM
            String period = (hour < 12) ? "AM" : "PM";

            // Convert 24-hour format to 12-hour format
            int displayHour = (hour <= 12) ? hour : hour - 12;

            // Format the time slot and add it to the list
            String timeSlot = String.format("%02d:00 %s", displayHour, period);
            timeSlots.add(timeSlot);
        }

        return timeSlots;
    }

    
    public void populateTimeSlotDropDown() {
        jComboBox2.removeAllItems();
        List<String> timeSlots = generateTimeSlots();
        String[] timeSlotsArray = timeSlots.toArray(new String[0]);
        for(String timeSlot : timeSlotsArray) {
           jComboBox2.addItem(timeSlot); 
        }
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel2 = new javax.swing.JLabel();
        jLabel6 = new javax.swing.JLabel();
        txtEmail = new javax.swing.JTextField();
        jLabelTitle = new javax.swing.JLabel();
        jButtonCreate = new javax.swing.JButton();
        jLabel7 = new javax.swing.JLabel();
        txtDate = new javax.swing.JTextField();
        jLabel8 = new javax.swing.JLabel();
        jComboBox1 = new javax.swing.JComboBox<>();
        jLabel10 = new javax.swing.JLabel();
        txtPrice1 = new javax.swing.JTextField();
        txtName1 = new javax.swing.JTextField();
        txtPhoneNo = new javax.swing.JTextField();
        jLabel11 = new javax.swing.JLabel();
        jLabel12 = new javax.swing.JLabel();
        jComboBox2 = new javax.swing.JComboBox<>();
        jButton1 = new javax.swing.JButton();
        jLabel1 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();

        setBackground(new java.awt.Color(204, 255, 255));
        setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        jLabel2.setText("Email:");
        add(jLabel2, new org.netbeans.lib.awtextra.AbsoluteConstraints(230, 220, -1, -1));

        jLabel6.setText("Price:");
        add(jLabel6, new org.netbeans.lib.awtextra.AbsoluteConstraints(230, 400, -1, -1));
        add(txtEmail, new org.netbeans.lib.awtextra.AbsoluteConstraints(330, 210, 230, 30));

        jLabelTitle.setFont(new java.awt.Font("Times New Roman", 1, 56)); // NOI18N
        jLabelTitle.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabelTitle.setText("Patient Appointment");
        add(jLabelTitle, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, -10, 820, 100));

        jButtonCreate.setBackground(new java.awt.Color(51, 153, 255));
        jButtonCreate.setFont(new java.awt.Font("Tahoma", 1, 18)); // NOI18N
        jButtonCreate.setText("BOOK ");
        jButtonCreate.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonCreateActionPerformed(evt);
            }
        });
        add(jButtonCreate, new org.netbeans.lib.awtextra.AbsoluteConstraints(360, 510, 180, 40));

        jLabel7.setText("Date:");
        add(jLabel7, new org.netbeans.lib.awtextra.AbsoluteConstraints(230, 280, -1, -1));
        add(txtDate, new org.netbeans.lib.awtextra.AbsoluteConstraints(330, 270, 230, 30));

        jLabel8.setText("Time:");
        add(jLabel8, new org.netbeans.lib.awtextra.AbsoluteConstraints(230, 340, -1, -1));

        jComboBox1.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Item 1", "Item 2", "Item 3", "Item 4" }));
        add(jComboBox1, new org.netbeans.lib.awtextra.AbsoluteConstraints(330, 450, 230, 30));

        jLabel10.setText("Doctor: ");
        add(jLabel10, new org.netbeans.lib.awtextra.AbsoluteConstraints(230, 460, -1, -1));

        txtPrice1.setEnabled(false);
        add(txtPrice1, new org.netbeans.lib.awtextra.AbsoluteConstraints(330, 390, 230, 30));
        add(txtName1, new org.netbeans.lib.awtextra.AbsoluteConstraints(330, 100, 230, 30));
        add(txtPhoneNo, new org.netbeans.lib.awtextra.AbsoluteConstraints(330, 150, 230, 30));

        jLabel11.setText("Name:");
        add(jLabel11, new org.netbeans.lib.awtextra.AbsoluteConstraints(230, 110, -1, -1));

        jLabel12.setText("Phone No :");
        add(jLabel12, new org.netbeans.lib.awtextra.AbsoluteConstraints(220, 160, -1, -1));

        jComboBox2.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Item 1", "Item 2", "Item 3", "Item 4" }));
        jComboBox2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jComboBox2ActionPerformed(evt);
            }
        });
        add(jComboBox2, new org.netbeans.lib.awtextra.AbsoluteConstraints(330, 330, 230, 30));

        jButton1.setBackground(new java.awt.Color(0, 204, 255));
        jButton1.setText("< Back");
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });
        add(jButton1, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 10, -1, -1));

        jLabel1.setText("mm/dd/yyyy");
        jLabel1.setEnabled(false);
        add(jLabel1, new org.netbeans.lib.awtextra.AbsoluteConstraints(260, 280, -1, -1));

        jLabel3.setIcon(new javax.swing.ImageIcon(getClass().getResource("/images/9.jpg"))); // NOI18N
        add(jLabel3, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 0, 820, 680));
    }// </editor-fold>//GEN-END:initComponents

    private void jButtonCreateActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonCreateActionPerformed
         
        String patientName = txtName1.getText();
        String phoneNumber = txtPhoneNo.getText();
        String emailId = txtEmail.getText();
        String doctorName = (String) jComboBox1.getSelectedItem();
        String appointmentDate = txtDate.getText();
        String appointmentTime = (String) jComboBox2.getSelectedItem();
        if (patientName.trim().isEmpty() || phoneNumber.trim().isEmpty() || emailId.trim().isEmpty()
            || appointmentDate.trim().isEmpty() || (appointmentTime == null || appointmentTime.trim().isEmpty())) {
            JOptionPane.showMessageDialog(this, "Please enter all details", "Validation Error", JOptionPane.ERROR_MESSAGE);
            return;
        }
        if (!phoneNumber.matches("\\d{10}")) {
        JOptionPane.showMessageDialog(this, "Please enter a valid 10-digit phone number", "Validation Error", JOptionPane.ERROR_MESSAGE);
        return;
    }

    // Validation for email format
        if (!emailId.matches("\\b[A-Za-z0-9._%+-]+@[A-Za-z0-9.-]+\\.[A-Z|a-z]{2,}\\b")) {
        JOptionPane.showMessageDialog(this, "Please enter a valid email address", "Validation Error", JOptionPane.ERROR_MESSAGE);
        return;
    }

    // Validation for date format (mm/dd/yyyy)
        if (!appointmentDate.matches("(0[1-9]|1[0-2])/(0[1-9]|[12][0-9]|3[01])/(19|20)\\d\\d")) {
        JOptionPane.showMessageDialog(this, "Please enter a valid date in mm/dd/yyyy format", "Validation Error", JOptionPane.ERROR_MESSAGE);
        return;
    }
        
        
        Random random = new Random();
        int random1 = random.nextInt(1000);
        int random2 = random.nextInt(1000);
        
        Optional<Patient> existingPatient = hospital.getPatientDirectory().getPatientList().stream().filter(n -> n.getPatientName() == patientName).findFirst();

        Patient p1 = null;
        if(existingPatient.isPresent()) {
            p1 = existingPatient.get();
        }
        else {
            p1 = new Patient(String.valueOf(random1),patientName, phoneNumber,emailId);
            hospital.addNewPatient(p1); 
        }

        Employee employee = null;
        for(Employee doctor : hospital.getEmployeeDirectory().getEmployeeList().stream().filter(r -> r.isDoctor()).collect(Collectors.toList())) {
            if(doctor.toString().equals(doctorName)) {
                employee = doctor;
                break;
            }
           
        }
        
        PatientAppointment pa1 = new PatientAppointment(appointmentDate, appointmentTime, String.valueOf(random2),p1, employee, "");
        employee.addNewPatientAppointment(pa1);
        hospital.addNewPatientAppointment(pa1);
        JOptionPane.showMessageDialog(this, "Appointment Booked");
        ReceptionistLandingPage vajp1 = new ReceptionistLandingPage(hospital, employee);
        MainFrame.mfInstance.setMainframeSplitFrame(vajp1);
     

    }//GEN-LAST:event_jButtonCreateActionPerformed

    private void jComboBox2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jComboBox2ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jComboBox2ActionPerformed

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
        ReceptionistLandingPage rljp = new ReceptionistLandingPage(hospital, employee);
        MainFrame.mfInstance.setMainframeSplitFrame(rljp); 
    }//GEN-LAST:event_jButton1ActionPerformed


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton jButton1;
    private javax.swing.JButton jButtonCreate;
    private javax.swing.JComboBox<String> jComboBox1;
    private javax.swing.JComboBox<String> jComboBox2;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel10;
    private javax.swing.JLabel jLabel11;
    private javax.swing.JLabel jLabel12;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JLabel jLabelTitle;
    private javax.swing.JTextField txtDate;
    private javax.swing.JTextField txtEmail;
    private javax.swing.JTextField txtName1;
    private javax.swing.JTextField txtPhoneNo;
    private javax.swing.JTextField txtPrice1;
    // End of variables declaration//GEN-END:variables
}
